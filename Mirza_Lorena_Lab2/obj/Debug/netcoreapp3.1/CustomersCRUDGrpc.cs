// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/customersCRUD.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcCustomersService {
  public static partial class CustomerService
  {
    static readonly string __ServiceName = "customer.CustomerService";

    static readonly grpc::Marshaller<global::GrpcCustomersService.Empty> __Marshaller_customer_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcCustomersService.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcCustomersService.CustomerList> __Marshaller_customer_CustomerList = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcCustomersService.CustomerList.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcCustomersService.CustomerId> __Marshaller_customer_CustomerId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcCustomersService.CustomerId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcCustomersService.Customer> __Marshaller_customer_Customer = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcCustomersService.Customer.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcCustomersService.Empty, global::GrpcCustomersService.CustomerList> __Method_GetAll = new grpc::Method<global::GrpcCustomersService.Empty, global::GrpcCustomersService.CustomerList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAll",
        __Marshaller_customer_Empty,
        __Marshaller_customer_CustomerList);

    static readonly grpc::Method<global::GrpcCustomersService.CustomerId, global::GrpcCustomersService.Customer> __Method_Get = new grpc::Method<global::GrpcCustomersService.CustomerId, global::GrpcCustomersService.Customer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_customer_CustomerId,
        __Marshaller_customer_Customer);

    static readonly grpc::Method<global::GrpcCustomersService.Customer, global::GrpcCustomersService.Empty> __Method_Insert = new grpc::Method<global::GrpcCustomersService.Customer, global::GrpcCustomersService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Insert",
        __Marshaller_customer_Customer,
        __Marshaller_customer_Empty);

    static readonly grpc::Method<global::GrpcCustomersService.Customer, global::GrpcCustomersService.Customer> __Method_Update = new grpc::Method<global::GrpcCustomersService.Customer, global::GrpcCustomersService.Customer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_customer_Customer,
        __Marshaller_customer_Customer);

    static readonly grpc::Method<global::GrpcCustomersService.CustomerId, global::GrpcCustomersService.Empty> __Method_Delete = new grpc::Method<global::GrpcCustomersService.CustomerId, global::GrpcCustomersService.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_customer_CustomerId,
        __Marshaller_customer_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcCustomersService.CustomersCRUDReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for CustomerService</summary>
    public partial class CustomerServiceClient : grpc::ClientBase<CustomerServiceClient>
    {
      /// <summary>Creates a new client for CustomerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CustomerServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CustomerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CustomerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CustomerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CustomerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::GrpcCustomersService.CustomerList GetAll(global::GrpcCustomersService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAll(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcCustomersService.CustomerList GetAll(global::GrpcCustomersService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.CustomerList> GetAllAsync(global::GrpcCustomersService.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.CustomerList> GetAllAsync(global::GrpcCustomersService.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAll, null, options, request);
      }
      public virtual global::GrpcCustomersService.Customer Get(global::GrpcCustomersService.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcCustomersService.Customer Get(global::GrpcCustomersService.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.Customer> GetAsync(global::GrpcCustomersService.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.Customer> GetAsync(global::GrpcCustomersService.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      public virtual global::GrpcCustomersService.Empty Insert(global::GrpcCustomersService.Customer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Insert(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcCustomersService.Empty Insert(global::GrpcCustomersService.Customer request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.Empty> InsertAsync(global::GrpcCustomersService.Customer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.Empty> InsertAsync(global::GrpcCustomersService.Customer request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Insert, null, options, request);
      }
      public virtual global::GrpcCustomersService.Customer Update(global::GrpcCustomersService.Customer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcCustomersService.Customer Update(global::GrpcCustomersService.Customer request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.Customer> UpdateAsync(global::GrpcCustomersService.Customer request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.Customer> UpdateAsync(global::GrpcCustomersService.Customer request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::GrpcCustomersService.Empty Delete(global::GrpcCustomersService.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcCustomersService.Empty Delete(global::GrpcCustomersService.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.Empty> DeleteAsync(global::GrpcCustomersService.CustomerId request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcCustomersService.Empty> DeleteAsync(global::GrpcCustomersService.CustomerId request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CustomerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CustomerServiceClient(configuration);
      }
    }

  }
}
#endregion
